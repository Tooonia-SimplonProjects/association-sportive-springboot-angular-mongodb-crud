{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport { Gymnase } from './gymnase.model';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class GymnaseService {\n  // l'injection de dépendance. J'injecte une instance de HttpClient\n  constructor(http) {\n    this.http = http; // j'initialise ma propriété gymnaseUrl avec la valeur donnée\n\n    this.gymnasesUrl = 'http://localhost:8080/gymnases';\n  } // Je déclare cette méthode que je peux appeler comme je veux\n\n\n  findAll() {\n    // this.http.get me permet de faire une requete Http avec la methode GET,\n    // qui me retournera un Observable (=un objet asyncrone)\n    // , et donc la réponse de l'Observable sera un tableau de gymnase\n    // en format JSON.\n    return this.http.get(this.gymnasesUrl).pipe(map(rawData => rawData.map(itemGymnase => new Gymnase(itemGymnase.id, itemGymnase.nomGymnase, itemGymnase.adresse, itemGymnase.ville, itemGymnase.surface, itemGymnase.seances))));\n  }\n\n}\n\nGymnaseService.ɵfac = function GymnaseService_Factory(t) {\n  return new (t || GymnaseService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nGymnaseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: GymnaseService,\n  factory: GymnaseService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["C:\\Users\\tooon\\Documents\\Tooonia\\SimplonWebDev\\Front-end\\association-sportive\\src\\app\\gymnase.service.ts"],"names":[],"mappings":"AAGA,SAAS,GAAT,QAAoB,gBAApB;AACA,SAAS,OAAT,QAAwB,iBAAxB;;;AAKA,OAAM,MAAO,cAAP,CAAqB;AAIzB;AACA,EAAA,WAAA,CAAoB,IAApB,EAAoC;AAAhB,SAAA,IAAA,GAAA,IAAA,CAAgB,CAClC;;AACA,SAAK,WAAL,GAAmB,gCAAnB;AACD,GARwB,CAUzB;;;AACO,EAAA,OAAO,GAAA;AACZ;AACA;AACA;AACA;AAEA,WAAO,KAAK,IAAL,CAAU,GAAV,CAAyB,KAAK,WAA9B,EAA2C,IAA3C,CACL,GAAG,CAAE,OAAD,IAAmB,OAAO,CAAC,GAAR,CAAY,WAAW,IAAI,IAAI,OAAJ,CAChD,WAAW,CAAC,EADoC,EAEhD,WAAW,CAAC,UAFoC,EAGhD,WAAW,CAAC,OAHoC,EAIhD,WAAW,CAAC,KAJoC,EAKhD,WAAW,CAAC,OALoC,EAMhD,WAAW,CAAC,OANoC,CAA3B,CAApB,CADE,CAAP;AAUD;;AA3BwB;;;mBAAd,c,EAAc,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAd,c;AAAc,EAAA,OAAA,EAAd,cAAc,CAAA,I;AAAA,EAAA,UAAA,EAFb","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Gymnase } from './gymnase.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GymnaseService {\n\n  private gymnasesUrl: string;\n\n  // l'injection de dépendance. J'injecte une instance de HttpClient\n  constructor(private http: HttpClient) {\n    // j'initialise ma propriété gymnaseUrl avec la valeur donnée\n    this.gymnasesUrl = 'http://localhost:8080/gymnases';\n  }\n\n  // Je déclare cette méthode que je peux appeler comme je veux\n  public findAll(): Observable<Gymnase[]> {\n    // this.http.get me permet de faire une requete Http avec la methode GET,\n    // qui me retournera un Observable (=un objet asyncrone)\n    // , et donc la réponse de l'Observable sera un tableau de gymnase\n    // en format JSON.\n\n    return this.http.get<Gymnase[]>(this.gymnasesUrl).pipe(\n      map((rawData:any[]) => rawData.map(itemGymnase => new Gymnase(\n        itemGymnase.id,\n        itemGymnase.nomGymnase,\n        itemGymnase.adresse,\n        itemGymnase.ville,\n        itemGymnase.surface,\n        itemGymnase.seances\n      )))\n    );\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}